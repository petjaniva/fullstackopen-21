{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/book.js","components/ShowPersons.js","App.js","index.js"],"names":["Filter","onChange","value","PersonForm","addPerson","data","onSubmit","newName","handleNameChange","newNumber","handleNumberChange","type","baseUrl","exportObject","getAll","axios","get","create","newObject","post","deletePerson","id","delete","updatePerson","changedObject","put","ShowPersons","result","persons","filter","setPersons","removePerson","person","window","confirm","name","bookService","then","cPerson","map","number","onClick","toLowerCase","includes","App","useState","useEffect","response","msg","setMsg","setNewName","setNewNumber","setFilter","notificationStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Notification","style","addPersonData","event","target","preventDefault","some","updatedPerson","find","setTimeout","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.402066a1.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Filter = ({onChange, value}) => {\r\n    return (\r\n      <div>\r\n      filter shown with\r\n      <input\r\n        value = {value}\r\n        onChange = {onChange}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Filter","import React from \"react\"\r\n\r\nconst PersonForm = ({addPerson, data}) => {\r\n    return(\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                name: \r\n                <input \r\n                value={data.newName}\r\n                onChange={data.handleNameChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                number:\r\n                <input\r\n                value={data.newNumber}\r\n                onChange={data.handleNumberChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import axios from \"axios\";\r\n\r\nconst baseUrl = 'https://cryptic-lake-98843.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\nconst deletePerson = id => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst updatePerson = (id, changedObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, changedObject)\r\n}\r\nconst exportObject = { getAll, create, deletePerson, updatePerson}\r\nexport default exportObject\r\n","import React from \"react\"\r\nimport bookService from '../services/book'\r\n\r\n\r\n\r\nconst ShowPersons = ({persons, filter, setPersons }) => {\r\n    let result\r\n    const removePerson = (persons, person) => {\r\n      const wantTo = window.confirm(`Delete ${person.name}`)\r\n      if (wantTo){\r\n      bookService\r\n        .deletePerson(person.id)\r\n        .then(setPersons(persons.filter(cPerson => cPerson !== person)))\r\n      }\r\n    }\r\n    if (filter === '') {\r\n      result = persons.map(person => <div key={person.name}>{person.name} {person.number}\r\n      <button key={person.name} onClick={() => removePerson(persons, person)}>delete</button>\r\n      </div>)\r\n    }\r\n    else {\r\n      const filtered = persons.filter(function (person){\r\n        return person.name.toLowerCase().includes(filter.toLowerCase())\r\n      })\r\n      result = filtered.map(person => <div key={person.name}>\r\n        {person.name} {person.number}\r\n        <button key={person.name} onClick={() => removePerson(persons, person)} value = {person}>delete</button>\r\n      </div>)\r\n    }\r\n    return result\r\n  }\r\n\r\nexport default ShowPersons","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport ShowPersons from './components/ShowPersons'\nimport bookService from './services/book'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n\n  useEffect(() => {\n    bookService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n    },[]\n  )\n\n  const [ msg, setMsg] = useState(null)\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ filter, setFilter] = useState('')\n  const notificationStyle = {\n    color: \"green\",\n    background: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n  const addPerson = (event) => {\n    event.preventDefault()\n    if (!(persons.some(person => person.name===newName))){\n      const person = {\n        name: newName,\n        number: newNumber\n      }\n      bookService\n        .create(person)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setNewName('')\n          setNewNumber('')\n          setMsg(`added ${response.data.name}`)\n        })\n        setTimeout(() => {\n          setMsg(null)\n        }, 3000)\n    }\n    else {\n      const wantTo = window.confirm(`${newName} is already added to phonebook, replace the old number with new one?`)\n      if (wantTo){\n        const updatedPerson = persons.find(person => person.name === newName)\n        updatedPerson.number = newNumber\n        bookService\n          .updatePerson(updatedPerson.id, updatedPerson)\n          .then(response => {\n            setPersons(persons.map(person =>\n              person.id === response.id ? response : person))\n            setMsg(`updated ${updatedPerson.name}`)\n          })\n          setTimeout(() => {\n            setMsg(null)\n          }, 3000)\n      }\n    }\n  }\n \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const Notification = ({msg}) => {\n    if (msg === null)\n    return null\n    else {\n      return (\n        <div style={notificationStyle}>{msg}</div>\n      )\n    }\n  }\n  \n  const addPersonData = {\n    newName,\n    newNumber,\n    handleNameChange,\n    handleNumberChange\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification msg={msg} />\n      <Filter onChange={handleFilterChange} value = {filter}/>\n      <h3>add a new</h3>\n      <PersonForm addPerson={addPerson} data={addPersonData}/>\n      <h2>Numbers</h2>\n      <ShowPersons persons={persons} filter={filter} setPersons={setPersons}/>\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}